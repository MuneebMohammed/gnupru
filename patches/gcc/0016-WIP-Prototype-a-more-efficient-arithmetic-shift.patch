From d7acc4d1bf8dd367a5557db8f70ad2e6e9034f87 Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dimitar@dinux.eu>
Date: Fri, 19 May 2017 22:51:06 +0300
Subject: [PATCH 16/16] WIP: Prototype a more efficient arithmetic shift

Signed-off-by: Dimitar Dimitrov <dimitar@dinux.eu>
---
 gcc/config/pru/constraints.md |  6 ++++++
 gcc/config/pru/predicates.md  |  8 ++++++++
 gcc/config/pru/pru.c          |  9 ++++++++
 gcc/config/pru/pru.md         | 15 ++++++++++++++
 libgcc/config/pru/lib2shift.c | 48 -------------------------------------------
 libgcc/config/pru/t-pru       |  1 -
 6 files changed, 38 insertions(+), 49 deletions(-)
 delete mode 100644 libgcc/config/pru/lib2shift.c

diff --git a/gcc/config/pru/constraints.md b/gcc/config/pru/constraints.md
index b66cd2bc00b..91d4345ff01 100644
--- a/gcc/config/pru/constraints.md
+++ b/gcc/config/pru/constraints.md
@@ -24,6 +24,7 @@
 ;;  J: 0 to 65535.
 ;;  L: 0 to 31 (for shift counts).
 ;;  M: -255 to 0 (for converting ADD to SUB with suitable UBYTE OP2).
+;;  P: 1
 ;;  T: Text segment label.  Needed to know when to select %pmem relocation.
 ;;  Z: Constant integer zero.
 ;;
@@ -66,6 +67,11 @@
   (and (match_code "const_int")
        (match_test "UBYTE_INT (-ival)")))
 
+(define_constraint "P"
+  "A constant 1."
+  (and (match_code "const_int")
+       (match_test "ival == 1")))
+
 (define_constraint "T"
   "A text segment (program memory) constant label."
   (match_test "text_segment_operand (op, VOIDmode)"))
diff --git a/gcc/config/pru/predicates.md b/gcc/config/pru/predicates.md
index 84c210b6f18..dde91b7e81d 100644
--- a/gcc/config/pru/predicates.md
+++ b/gcc/config/pru/predicates.md
@@ -18,6 +18,10 @@
 ;; along with GCC; see the file COPYING3.  If not see
 ;; <http://www.gnu.org/licenses/>.
 
+(define_predicate "const_1_operand"
+  (and (match_code "const_int")
+       (match_test "IN_RANGE (INTVAL (op), 1, 1)")))
+
 (define_predicate "const_ubyte_operand"
   (and (match_code "const_int")
        (match_test "IN_RANGE (INTVAL (op), 0, 0xff)")))
@@ -51,6 +55,10 @@
   (ior (match_operand 0 "const_ubyte_operand")
        (match_operand 0 "register_operand")))
 
+(define_predicate "reg_or_const_1_operand"
+  (ior (match_operand 0 "const_1_operand")
+       (match_operand 0 "register_operand")))
+
 (define_predicate "const_shift_operand"
   (and (match_code "const_int")
        (match_test "SHIFT_INT (INTVAL (op))")))
diff --git a/gcc/config/pru/pru.c b/gcc/config/pru/pru.c
index 85643bac9a3..cf6c1d8f907 100644
--- a/gcc/config/pru/pru.c
+++ b/gcc/config/pru/pru.c
@@ -635,6 +635,15 @@ pru_rtx_costs (rtx x, machine_mode mode ATTRIBUTE_UNUSED,
 	  *total = COSTS_N_INSNS (3);
 	  return false;
 	}
+      case ASHIFTRT:
+	{
+	  rtx op1 = XEXP (x, 1);
+	  if (const_1_operand (op1, VOIDmode))
+	    *total = COSTS_N_INSNS (2);
+	  else
+	    *total = COSTS_N_INSNS (6);
+	  return false;
+	}
       case ZERO_EXTEND:
 	{
 	  *total = COSTS_N_INSNS (0);
diff --git a/gcc/config/pru/pru.md b/gcc/config/pru/pru.md
index b679de1ef44..9431c6c57bb 100644
--- a/gcc/config/pru/pru.md
+++ b/gcc/config/pru/pru.md
@@ -403,6 +403,21 @@
   ""
   ""
   [(set_attr "type" "shift")])
+
+; LRA cannot cope with clobbered op2, hence the scratch register.
+(define_insn "ashr<mode>3"
+  [(set (match_operand:ALL 0 "register_operand" "=&r,r")
+        (ashiftrt:ALL
+          (match_operand:ALL 1 "register_operand" "0,r")
+          (match_operand:ALL 2 "reg_or_const_1_operand" "r,P")))
+    (clobber (match_scratch:ALL 3 "=r,X"))]
+  ""
+  "@
+   mov %x3, %x2\;ASHRLP%=:\;qbeq ASHREND%=, %x3, 0\; sub %x3, %x3, 1\; lsr\\t%x0, %x0, 1\; qbbc ASHRLP%=, %x0, (%S0 * 8) - 2\; set %x0, %x0, (%S0 * 8) - 1\; jmp ASHRLP%=\;ASHREND%=:
+   lsr\\t%x0, %x1, 1\;qbbc LSIGN%=, %x0, (%S0 * 8) - 2\;set %x0, %x0, (%S0 * 8) - 1\;LSIGN%=:"
+  [(set_attr "type" "complex,alu")
+   (set_attr "length" "28,4")])
+
 
 ;; Include ALU patterns with zero-extension of operands.  That's where
 ;; the real insns are defined.
diff --git a/libgcc/config/pru/lib2shift.c b/libgcc/config/pru/lib2shift.c
deleted file mode 100644
index 1677dcc2098..00000000000
--- a/libgcc/config/pru/lib2shift.c
+++ /dev/null
@@ -1,48 +0,0 @@
-/* Shift functions for the GCC support library for the PRU
-   Copyright (C) 2014 Free Software Foundation, Inc.
-   Contributed by Dimitar Dimitrov <dimitar@dinux.eu>
-
-   This file is part of GCC.
-
-   GCC is free software; you can redistribute it and/or modify
-   it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 3, or (at your option)
-   any later version.
-
-   GCC is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-   GNU General Public License for more details.
-
-   Under Section 7 of GPL version 3, you are granted additional
-   permissions described in the GCC Runtime Library Exception, version
-   3.1, as published by the Free Software Foundation.
-
-   You should have received a copy of the GNU General Public License and
-   a copy of the GCC Runtime Library Exception along with this program;
-   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
-   <http://www.gnu.org/licenses/>.  */
-
-typedef		  int  sint32_type   __attribute__ ((mode (SI)));
-typedef unsigned  int  uint32_type   __attribute__ ((mode (SI)));
-typedef		  int  sint16_type   __attribute__ ((mode (HI)));
-typedef unsigned  int  uint16_type   __attribute__ ((mode (HI)));
-
-sint32_type __ashrsi3 (sint32_type in, char bit);
-
-sint32_type
-__ashrsi3 (sint32_type in, char bit)
-{
-  sint32_type sign = in & (1 << 31);
-
-  if (bit > 32)
-    return 0;
-  if (bit < 0)
-    return in;
-
-  while (bit--)
-    in = ((uint32_type)in >> 1) | sign;
-
-  return in;
-}
-
diff --git a/libgcc/config/pru/t-pru b/libgcc/config/pru/t-pru
index 380509cf0e4..9051c0eaf05 100644
--- a/libgcc/config/pru/t-pru
+++ b/libgcc/config/pru/t-pru
@@ -27,7 +27,6 @@ LIB2ADD = \
 	$(srcdir)/config/pru/lib2divHI.c \
 	$(srcdir)/config/pru/lib2divSI.c \
 	$(srcdir)/config/pru/lib2bitcountHI.c \
-	$(srcdir)/config/pru/lib2shift.c \
 	$(srcdir)/config/pru/muldi3.S
 
 
-- 
2.11.0


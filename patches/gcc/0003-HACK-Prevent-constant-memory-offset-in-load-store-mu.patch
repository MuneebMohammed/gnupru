From 59b6b668bb3e433930cd46f91f9993ac0933400f Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dinuxbg@gmail.com>
Date: Sat, 2 Aug 2014 23:26:39 +0300
Subject: [PATCH 3/4] HACK: Prevent constant-memory-offset in
 load/store-multiple

Explicitly enforce offset=0 for the first load/store memory address.
PRU supports UBYTE offset, but more elaborate patterns are needed
to support it.

This patch fixes an internal compiler error when compiling
gcc.c-torture/compile/20050113-1.c

Signed-off-by: Dimitar Dimitrov <dinuxbg@gmail.com>
---
 gcc/config/pru/pru.md | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/gcc/config/pru/pru.md b/gcc/config/pru/pru.md
index 8c9f745..6e02c11 100644
--- a/gcc/config/pru/pru.md
+++ b/gcc/config/pru/pru.md
@@ -95,6 +95,9 @@
 ;;   op0: first of the consecutive registers
 ;;   op1: first memory location
 ;;   op2: number of consecutive registers
+;;
+;; TODO - inform GCC MD that we can take an UBYTE offset for the memory
+;; address.
 (define_expand "load_multiple"
   [(match_par_dup 3 [(set (match_operand:SI 0 "" "")
 			  (match_operand:SI 1 "" ""))
@@ -103,6 +106,7 @@
   "
 {
   int first_regno, count, i;
+  rtx op1;
 
   /* Support only loading a constant number of registers from memory and
      only if at least one register. */
@@ -118,14 +122,13 @@
   first_regno = REGNO (operands[0]);
 
   operands[3] = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (count));
+  op1 = replace_equiv_address (operands[1],
+			       force_reg (SImode, XEXP (operands[1], 0)));
 
   for (i = 0; i < count; i++)
     XVECEXP (operands[3], 0, i)
-      = gen_rtx_SET (VOIDmode,
-		 gen_rtx_REG (SImode, first_regno + i),
-		 gen_rtx_MEM (SImode, plus_constant (Pmode,
-						     XEXP (operands[1], 0),
-						     i * UNITS_PER_WORD)));
+      = gen_rtx_SET (VOIDmode, gen_rtx_REG (SImode, first_regno + i),
+		     adjust_address_nv (op1, SImode, i * UNITS_PER_WORD));
 }")
 
 ;; Store multiple
@@ -140,6 +143,7 @@
   "
 {
   int first_regno, count, i;
+  rtx op0;
 
   /* Support only storing a constant number of registers to memory and
      only if at least one register. */
@@ -155,14 +159,14 @@
   first_regno = REGNO (operands[1]);
 
   operands[3] = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (count));
+  op0 = replace_equiv_address (operands[0],
+			       force_reg (SImode, XEXP (operands[0], 0)));
 
   for (i = 0; i < count; i++)
     XVECEXP (operands[3], 0, i)
       = gen_rtx_SET (VOIDmode,
-		 gen_rtx_MEM (SImode, plus_constant (Pmode,
-						     XEXP (operands[0], 0),
-						     i * UNITS_PER_WORD)),
-		 gen_rtx_REG (SImode, first_regno + i));
+		     adjust_address_nv (op0, SImode, i * UNITS_PER_WORD),
+		     gen_rtx_REG (SImode, first_regno + i));
 }")
 
 ;; Include the machine-generated patterns for all LBBO/SBBO multuple-reg
-- 
2.1.0.rc1


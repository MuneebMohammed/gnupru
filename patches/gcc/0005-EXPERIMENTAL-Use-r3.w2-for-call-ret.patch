From be5ea30a25737f588beb47881c1b5877f0992324 Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dimitar@dinux.eu>
Date: Sat, 24 Dec 2016 12:50:55 +0200
Subject: [PATCH 05/16] EXPERIMENTAL: Use r3.w2 for call/ret

Signed-off-by: Dimitar Dimitrov <dimitar@dinux.eu>
---
 gcc/config/pru/pru.c  | 4 +++-
 gcc/config/pru/pru.h  | 8 ++++++--
 gcc/config/pru/pru.md | 7 ++++---
 gcc/dwarf2cfi.c       | 1 +
 4 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/gcc/config/pru/pru.c b/gcc/config/pru/pru.c
index 879a9b36df0..76fb2d62f67 100644
--- a/gcc/config/pru/pru.c
+++ b/gcc/config/pru/pru.c
@@ -398,7 +398,9 @@ pru_get_return_address (int count)
   if (count != 0)
     return const0_rtx;
 
-  return get_hard_reg_initial_val (Pmode, RA_REGNO);
+  /* Return r3.w2.  */
+  return gen_rtx_LSHIFTRT (SImode, get_hard_reg_initial_val (Pmode, RA_REGNO),
+			   GEN_INT (16));
 }
 
 /* Implement FUNCTION_PROFILER macro.  */
diff --git a/gcc/config/pru/pru.h b/gcc/config/pru/pru.h
index 9a7ae123a31..05564775fa1 100644
--- a/gcc/config/pru/pru.h
+++ b/gcc/config/pru/pru.h
@@ -229,10 +229,14 @@ enum reg_class
 #define STARTING_FRAME_OFFSET 0
 #define FIRST_PARM_OFFSET(FUNDECL) 0
 
-/* Before the prologue, RA lives in r3.  */
-#define INCOMING_RETURN_ADDR_RTX  gen_rtx_REG (Pmode, RA_REGNO)
+/* Before the prologue, RA lives in r3.w2.  */
+#define INCOMING_RETURN_ADDR_RTX				    \
+  gen_rtx_LSHIFTRT (SImode, gen_rtx_REG (Pmode, RA_REGNO), GEN_INT (16))
+
 #define RETURN_ADDR_RTX(C,F) pru_get_return_address (C)
 
+/* FIXME - either fix GCC to use PRU subregisters, or sync with GDB on
+   how to represent them.  */
 #define DWARF_FRAME_RETURN_COLUMN RA_REGNO
 
 /* The CFA includes the pretend args.  */
diff --git a/gcc/config/pru/pru.md b/gcc/config/pru/pru.md
index 22270b25438..3412b46c789 100644
--- a/gcc/config/pru/pru.md
+++ b/gcc/config/pru/pru.md
@@ -28,9 +28,10 @@
    (LAST_RETVAL_REGNO	    15)	;
    (PROLOGUE_TEMP_REGNO	    1)	; Temporary register to use in prologue.
 
-   (RA_REGNO		    3)	; Return address register.  NB! This is
-				; a major difference from TI's PRU C
-				; compiler where r3.w2 is used.
+   (RA_REGNO		    3)	; Return address register __container__.
+				; NB! Per TI's ABI, we are using r3.w2, but
+				; PRU GCC does not currently support
+				; sub-hw-registers.
    (FP_REGNO		    4)	; Frame pointer register.
    (LAST_NONIO_GP_REG	    29)	; Last non-I/O general purpose register.
    (LOOPCNTR_REG	    32)	; internal LOOP counter register
diff --git a/gcc/dwarf2cfi.c b/gcc/dwarf2cfi.c
index 45b5e3099d2..048ca730864 100644
--- a/gcc/dwarf2cfi.c
+++ b/gcc/dwarf2cfi.c
@@ -2920,6 +2920,7 @@ initial_return_save (rtx rtl)
       break;
 
     case PLUS:
+    case LSHIFTRT:	/* For PRU */
       /* The return address is at some offset from any value we can
 	 actually load.  For instance, on the SPARC it is in %i7+8. Just
 	 ignore the offset for now; it doesn't matter for unwinding frames.  */
-- 
2.11.0


From 145d51ace7534748abc09e280f1ed0e4a4246b30 Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dimitar@dinux.eu>
Date: Mon, 17 Apr 2017 17:39:42 +0300
Subject: [PATCH 16/16] WIP: TI ABI compatibility

This is an ongoing work on reworking the GCC PRU port to be
compatible with the TI ABI.

WARNING: This patch is not usable! Please use the stable branch.

Signed-off-by: Dimitar Dimitrov <dimitar@dinux.eu>
---
 gcc/config/pru/constraints.md       |    6 +
 gcc/config/pru/predicates.md        |    8 +-
 gcc/config/pru/pru-ldst-multiple.md | 3192 +++++++++++++++++------------------
 gcc/config/pru/pru-ldst-multiple.ml |   22 +-
 gcc/config/pru/pru.c                |   82 +-
 gcc/config/pru/pru.h                |  150 +-
 gcc/config/pru/pru.md               |  120 +-
 libgcc/config/pru/lib2shift.c       |   35 +
 8 files changed, 1885 insertions(+), 1730 deletions(-)

diff --git a/gcc/config/pru/constraints.md b/gcc/config/pru/constraints.md
index b66cd2bc00b..0be83b30a66 100644
--- a/gcc/config/pru/constraints.md
+++ b/gcc/config/pru/constraints.md
@@ -24,6 +24,7 @@
 ;;  J: 0 to 65535.
 ;;  L: 0 to 31 (for shift counts).
 ;;  M: -255 to 0 (for converting ADD to SUB with suitable UBYTE OP2).
+;;  N: -32768 to 32767 (16-bit signed integer)
 ;;  T: Text segment label.  Needed to know when to select %pmem relocation.
 ;;  Z: Constant integer zero.
 ;;
@@ -66,6 +67,11 @@
   (and (match_code "const_int")
        (match_test "UBYTE_INT (-ival)")))
 
+(define_constraint "N"
+  "A constant in the range [-32768;32767]."
+  (and (match_code "const_int")
+       (match_test "SHWORD_INT (ival)")))
+
 (define_constraint "T"
   "A text segment (program memory) constant label."
   (match_test "text_segment_operand (op, VOIDmode)"))
diff --git a/gcc/config/pru/predicates.md b/gcc/config/pru/predicates.md
index 84c210b6f18..948cecd4db7 100644
--- a/gcc/config/pru/predicates.md
+++ b/gcc/config/pru/predicates.md
@@ -141,10 +141,10 @@
 
       if (GET_CODE (elt) != SET
 	  || GET_CODE (SET_DEST (elt)) != REG
-	  || GET_MODE (SET_DEST (elt)) != SImode
+	  || GET_MODE (SET_DEST (elt)) != QImode
 	  || REGNO (SET_DEST (elt))    != (unsigned) (dest_regno + i)
 	  || GET_CODE (SET_SRC (elt))  != MEM
-	  || GET_MODE (SET_SRC (elt))  != SImode
+	  || GET_MODE (SET_SRC (elt))  != QImode
 	  || GET_CODE (XEXP (SET_SRC (elt), 0)) != PLUS
 	  || ! rtx_equal_p (XEXP (XEXP (SET_SRC (elt), 0), 0), src_addr)
 	  || GET_CODE (XEXP (XEXP (SET_SRC (elt), 0), 1)) != CONST_INT
@@ -193,10 +193,10 @@
 
       if (GET_CODE (elt) != SET
 	  || GET_CODE (SET_SRC (elt)) != REG
-	  || GET_MODE (SET_SRC (elt)) != SImode
+	  || GET_MODE (SET_SRC (elt)) != QImode
 	  || REGNO (SET_SRC (elt)) != (unsigned) (src_regno + i)
 	  || GET_CODE (SET_DEST (elt)) != MEM
-	  || GET_MODE (SET_DEST (elt)) != SImode
+	  || GET_MODE (SET_DEST (elt)) != QImode
 	  || GET_CODE (XEXP (SET_DEST (elt), 0)) != PLUS
 	  || ! rtx_equal_p (XEXP (XEXP (SET_DEST (elt), 0), 0), dest_addr)
 	  || GET_CODE (XEXP (XEXP (SET_DEST (elt), 0), 1)) != CONST_INT
diff --git a/gcc/config/pru/pru-ldst-multiple.md b/gcc/config/pru/pru-ldst-multiple.md
index 9e843a7cf68..8cb006319a3 100644
--- a/gcc/config/pru/pru-ldst-multiple.md
+++ b/gcc/config/pru/pru-ldst-multiple.md
@@ -24,2775 +24,2775 @@
 
 (define_insn "*lbbo_multiple_1_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 2 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 2 "register_operand" "r")
                            (match_operand:SI 3 "const_ubyte_operand" "I"))))])]
   "XVECLEN (operands[0], 0) == 1"
-  "lbbo\t%1, %2, %3, 4"
+  "lbbo\t%1, %2, %3, 1"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_1"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 2 "register_operand" "r")))])]
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 2 "register_operand" "r")))])]
   "XVECLEN (operands[0], 0) == 1"
-  "lbbo\t%1, %2, 0, 4"
+  "lbbo\t%1, %2, 0, 1"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_1_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 2 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 2 "register_operand" "r")
                            (match_operand:SI 3 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))])]
+          (match_operand:QI 1 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 1"
-  "sbbo\t%1, %2, %3, 4"
+  "sbbo\t%1, %2, %3, 1"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_1"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 2 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))])]
+    [(set (mem:QI (match_operand:SI 2 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 1"
-  "sbbo\t%1, %2, 0, 4"
+  "sbbo\t%1, %2, 0, 1"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_2_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 3 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 3 "register_operand" "r")
                            (match_operand:SI 4 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 3)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 3)
                            (match_operand:SI 5 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 2"
-  "lbbo\t%1, %3, %4, 8"
+  "lbbo\t%1, %3, %4, 2"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_2"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 3 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 3)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 3 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 3)
                            (match_operand:SI 4 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 2"
-  "lbbo\t%1, %3, 0, 8"
+  "lbbo\t%1, %3, 0, 2"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_2_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 3 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 3 "register_operand" "r")
                            (match_operand:SI 4 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 3)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 3)
                            (match_operand:SI 5 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))])]
+          (match_operand:QI 2 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 2"
-  "sbbo\t%1, %3, %4, 8"
+  "sbbo\t%1, %3, %4, 2"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_2"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 3 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 3)
+    [(set (mem:QI (match_operand:SI 3 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 3)
                            (match_operand:SI 4 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))])]
+          (match_operand:QI 2 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 2"
-  "sbbo\t%1, %3, 0, 8"
+  "sbbo\t%1, %3, 0, 2"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_3_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 4 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 4 "register_operand" "r")
                            (match_operand:SI 5 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 4)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 6 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 4)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 7 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 3"
-  "lbbo\t%1, %4, %5, 12"
+  "lbbo\t%1, %4, %5, 3"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_3"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 4 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 4)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 4 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 5 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 4)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 6 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 3"
-  "lbbo\t%1, %4, 0, 12"
+  "lbbo\t%1, %4, 0, 3"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_3_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 4 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 4 "register_operand" "r")
                            (match_operand:SI 5 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 4)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 6 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 4)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 7 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))])]
+          (match_operand:QI 3 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 3"
-  "sbbo\t%1, %4, %5, 12"
+  "sbbo\t%1, %4, %5, 3"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_3"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 4 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 4)
+    [(set (mem:QI (match_operand:SI 4 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 5 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 4)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 4)
                            (match_operand:SI 6 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))])]
+          (match_operand:QI 3 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 3"
-  "sbbo\t%1, %4, 0, 12"
+  "sbbo\t%1, %4, 0, 3"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_4_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 5 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 5 "register_operand" "r")
                            (match_operand:SI 6 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 5)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 7 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 5)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 8 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 5)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 9 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 4"
-  "lbbo\t%1, %5, %6, 16"
+  "lbbo\t%1, %5, %6, 4"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_4"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 5 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 5)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 5 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 6 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 5)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 7 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 5)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 8 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 4"
-  "lbbo\t%1, %5, 0, 16"
+  "lbbo\t%1, %5, 0, 4"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_4_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 5 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 5 "register_operand" "r")
                            (match_operand:SI 6 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 5)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 7 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 5)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 8 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 5)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 9 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))])]
+          (match_operand:QI 4 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 4"
-  "sbbo\t%1, %5, %6, 16"
+  "sbbo\t%1, %5, %6, 4"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_4"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 5 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 5)
+    [(set (mem:QI (match_operand:SI 5 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 6 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 5)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 7 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 5)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 5)
                            (match_operand:SI 8 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))])]
+          (match_operand:QI 4 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 4"
-  "sbbo\t%1, %5, 0, 16"
+  "sbbo\t%1, %5, 0, 4"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_5_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 6 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 6 "register_operand" "r")
                            (match_operand:SI 7 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 8 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 9 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 10 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 11 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 5"
-  "lbbo\t%1, %6, %7, 20"
+  "lbbo\t%1, %6, %7, 5"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_5"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 6 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 6 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 7 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 8 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 9 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 6)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 10 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 5"
-  "lbbo\t%1, %6, 0, 20"
+  "lbbo\t%1, %6, 0, 5"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_5_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 6 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 6 "register_operand" "r")
                            (match_operand:SI 7 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 8 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 9 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))])]
+          (match_operand:QI 5 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 5"
-  "sbbo\t%1, %6, %7, 20"
+  "sbbo\t%1, %6, %7, 5"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_5"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 6 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+    [(set (mem:QI (match_operand:SI 6 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 7 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 8 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 9 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 6)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 6)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))])]
+          (match_operand:QI 5 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 5"
-  "sbbo\t%1, %6, 0, 20"
+  "sbbo\t%1, %6, 0, 5"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_6_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 7 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 7 "register_operand" "r")
                            (match_operand:SI 8 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 9 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 10 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 13 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 6"
-  "lbbo\t%1, %7, %8, 24"
+  "lbbo\t%1, %7, %8, 6"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_6"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 7 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 7 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 8 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 9 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 10 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 7)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 12 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 6"
-  "lbbo\t%1, %7, 0, 24"
+  "lbbo\t%1, %7, 0, 6"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_6_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 7 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 7 "register_operand" "r")
                            (match_operand:SI 8 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 9 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))])]
+          (match_operand:QI 6 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 6"
-  "sbbo\t%1, %7, %8, 24"
+  "sbbo\t%1, %7, %8, 6"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_6"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 7 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+    [(set (mem:QI (match_operand:SI 7 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 8 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 9 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 7)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 7)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))])]
+          (match_operand:QI 6 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 6"
-  "sbbo\t%1, %7, 0, 24"
+  "sbbo\t%1, %7, 0, 6"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_7_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 8 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 8 "register_operand" "r")
                            (match_operand:SI 9 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 10 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 15 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 7"
-  "lbbo\t%1, %8, %9, 28"
+  "lbbo\t%1, %8, %9, 7"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_7"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 8 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 8 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 9 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 10 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 8)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 14 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 7"
-  "lbbo\t%1, %8, 0, 28"
+  "lbbo\t%1, %8, 0, 7"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_7_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 8 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 8 "register_operand" "r")
                            (match_operand:SI 9 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))])]
+          (match_operand:QI 7 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 7"
-  "sbbo\t%1, %8, %9, 28"
+  "sbbo\t%1, %8, %9, 7"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_7"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 8 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+    [(set (mem:QI (match_operand:SI 8 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 9 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 8)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 8)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))])]
+          (match_operand:QI 7 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 7"
-  "sbbo\t%1, %8, 0, 28"
+  "sbbo\t%1, %8, 0, 7"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_8_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 9 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 9 "register_operand" "r")
                            (match_operand:SI 10 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 17 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 8"
-  "lbbo\t%1, %9, %10, 32"
+  "lbbo\t%1, %9, %10, 8"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_8"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 9 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 9 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 10 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 9)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 16 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 8"
-  "lbbo\t%1, %9, 0, 32"
+  "lbbo\t%1, %9, 0, 8"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_8_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 9 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 9 "register_operand" "r")
                            (match_operand:SI 10 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))])]
+          (match_operand:QI 8 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 8"
-  "sbbo\t%1, %9, %10, 32"
+  "sbbo\t%1, %9, %10, 8"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_8"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 9 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+    [(set (mem:QI (match_operand:SI 9 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 10 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 9)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 9)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))])]
+          (match_operand:QI 8 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 8"
-  "sbbo\t%1, %9, 0, 32"
+  "sbbo\t%1, %9, 0, 8"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_9_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 10 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 10 "register_operand" "r")
                            (match_operand:SI 11 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 19 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 9"
-  "lbbo\t%1, %10, %11, 36"
+  "lbbo\t%1, %10, %11, 9"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_9"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 10 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 10 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 11 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 10)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 18 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 9"
-  "lbbo\t%1, %10, 0, 36"
+  "lbbo\t%1, %10, 0, 9"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_9_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 10 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 10 "register_operand" "r")
                            (match_operand:SI 11 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))])]
+          (match_operand:QI 9 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 9"
-  "sbbo\t%1, %10, %11, 36"
+  "sbbo\t%1, %10, %11, 9"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_9"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 10 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+    [(set (mem:QI (match_operand:SI 10 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 11 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 10)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 10)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))])]
+          (match_operand:QI 9 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 9"
-  "sbbo\t%1, %10, 0, 36"
+  "sbbo\t%1, %10, 0, 9"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_10_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 11 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 11 "register_operand" "r")
                            (match_operand:SI 12 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 21 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 10"
-  "lbbo\t%1, %11, %12, 40"
+  "lbbo\t%1, %11, %12, 10"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_10"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 11 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 11 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 12 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 11)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 20 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 10"
-  "lbbo\t%1, %11, 0, 40"
+  "lbbo\t%1, %11, 0, 10"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_10_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 11 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 11 "register_operand" "r")
                            (match_operand:SI 12 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))])]
+          (match_operand:QI 10 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 10"
-  "sbbo\t%1, %11, %12, 40"
+  "sbbo\t%1, %11, %12, 10"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_10"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 11 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+    [(set (mem:QI (match_operand:SI 11 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 12 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 11)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 11)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))])]
+          (match_operand:QI 10 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 10"
-  "sbbo\t%1, %11, 0, 40"
+  "sbbo\t%1, %11, 0, 10"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_11_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 12 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 12 "register_operand" "r")
                            (match_operand:SI 13 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 23 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 11"
-  "lbbo\t%1, %12, %13, 44"
+  "lbbo\t%1, %12, %13, 11"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_11"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 12 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 12 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 13 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 12)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 22 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 11"
-  "lbbo\t%1, %12, 0, 44"
+  "lbbo\t%1, %12, 0, 11"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_11_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 12 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 12 "register_operand" "r")
                            (match_operand:SI 13 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))])]
+          (match_operand:QI 11 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 11"
-  "sbbo\t%1, %12, %13, 44"
+  "sbbo\t%1, %12, %13, 11"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_11"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 12 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+    [(set (mem:QI (match_operand:SI 12 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 13 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 12)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 12)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))])]
+          (match_operand:QI 11 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 11"
-  "sbbo\t%1, %12, 0, 44"
+  "sbbo\t%1, %12, 0, 11"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_12_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 13 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 13 "register_operand" "r")
                            (match_operand:SI 14 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 25 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 12"
-  "lbbo\t%1, %13, %14, 48"
+  "lbbo\t%1, %13, %14, 12"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_12"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 13 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 13 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 14 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 13)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 24 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 12"
-  "lbbo\t%1, %13, 0, 48"
+  "lbbo\t%1, %13, 0, 12"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_12_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 13 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 13 "register_operand" "r")
                            (match_operand:SI 14 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))])]
+          (match_operand:QI 12 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 12"
-  "sbbo\t%1, %13, %14, 48"
+  "sbbo\t%1, %13, %14, 12"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_12"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 13 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+    [(set (mem:QI (match_operand:SI 13 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 14 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 13)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 13)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))])]
+          (match_operand:QI 12 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 12"
-  "sbbo\t%1, %13, 0, 48"
+  "sbbo\t%1, %13, 0, 12"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_13_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 14 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 14 "register_operand" "r")
                            (match_operand:SI 15 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 27 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 13"
-  "lbbo\t%1, %14, %15, 52"
+  "lbbo\t%1, %14, %15, 13"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_13"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 14 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 14 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 15 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 14)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 26 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 13"
-  "lbbo\t%1, %14, 0, 52"
+  "lbbo\t%1, %14, 0, 13"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_13_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 14 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 14 "register_operand" "r")
                            (match_operand:SI 15 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))])]
+          (match_operand:QI 13 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 13"
-  "sbbo\t%1, %14, %15, 52"
+  "sbbo\t%1, %14, %15, 13"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_13"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 14 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+    [(set (mem:QI (match_operand:SI 14 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 15 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 14)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 14)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))])]
+          (match_operand:QI 13 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 13"
-  "sbbo\t%1, %14, 0, 52"
+  "sbbo\t%1, %14, 0, 13"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_14_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 15 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 15 "register_operand" "r")
                            (match_operand:SI 16 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 29 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 14"
-  "lbbo\t%1, %15, %16, 56"
+  "lbbo\t%1, %15, %16, 14"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_14"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 15 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 15 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 16 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 15)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 28 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 14"
-  "lbbo\t%1, %15, 0, 56"
+  "lbbo\t%1, %15, 0, 14"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_14_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 15 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 15 "register_operand" "r")
                            (match_operand:SI 16 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))])]
+          (match_operand:QI 14 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 14"
-  "sbbo\t%1, %15, %16, 56"
+  "sbbo\t%1, %15, %16, 14"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_14"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 15 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+    [(set (mem:QI (match_operand:SI 15 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 16 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 15)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 15)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))])]
+          (match_operand:QI 14 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 14"
-  "sbbo\t%1, %15, 0, 56"
+  "sbbo\t%1, %15, 0, 14"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_15_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 16 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 16 "register_operand" "r")
                            (match_operand:SI 17 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 31 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 15"
-  "lbbo\t%1, %16, %17, 60"
+  "lbbo\t%1, %16, %17, 15"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_15"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 16 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 16 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 17 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 16)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 30 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 15"
-  "lbbo\t%1, %16, 0, 60"
+  "lbbo\t%1, %16, 0, 15"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_15_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 16 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 16 "register_operand" "r")
                            (match_operand:SI 17 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))])]
+          (match_operand:QI 15 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 15"
-  "sbbo\t%1, %16, %17, 60"
+  "sbbo\t%1, %16, %17, 15"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_15"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 16 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+    [(set (mem:QI (match_operand:SI 16 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 17 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 16)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 16)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))])]
+          (match_operand:QI 15 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 15"
-  "sbbo\t%1, %16, 0, 60"
+  "sbbo\t%1, %16, 0, 15"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_16_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 17 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 17 "register_operand" "r")
                            (match_operand:SI 18 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 33 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 16"
-  "lbbo\t%1, %17, %18, 64"
+  "lbbo\t%1, %17, %18, 16"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_16"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 17 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 17 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 18 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 17)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 32 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 16"
-  "lbbo\t%1, %17, 0, 64"
+  "lbbo\t%1, %17, 0, 16"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_16_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 17 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 17 "register_operand" "r")
                            (match_operand:SI 18 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))])]
+          (match_operand:QI 16 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 16"
-  "sbbo\t%1, %17, %18, 64"
+  "sbbo\t%1, %17, %18, 16"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_16"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 17 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+    [(set (mem:QI (match_operand:SI 17 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 18 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 17)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 17)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))])]
+          (match_operand:QI 16 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 16"
-  "sbbo\t%1, %17, 0, 64"
+  "sbbo\t%1, %17, 0, 16"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_17_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 18 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 18 "register_operand" "r")
                            (match_operand:SI 19 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 33 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 34 "const_int_operand" "i"))))
-     (set (match_operand:SI 17 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 17 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 35 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 17"
-  "lbbo\t%1, %18, %19, 68"
+  "lbbo\t%1, %18, %19, 17"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_17"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 18 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 18 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 19 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 33 "const_int_operand" "i"))))
-     (set (match_operand:SI 17 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 18)
+     (set (match_operand:QI 17 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 34 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 17"
-  "lbbo\t%1, %18, 0, 68"
+  "lbbo\t%1, %18, 0, 17"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_17_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 18 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 18 "register_operand" "r")
                            (match_operand:SI 19 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 34 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 16 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 35 "const_int_operand" "i")))
-          (match_operand:SI 17 "register_operand" ""))])]
+          (match_operand:QI 17 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 17"
-  "sbbo\t%1, %18, %19, 68"
+  "sbbo\t%1, %18, %19, 17"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_17"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 18 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+    [(set (mem:QI (match_operand:SI 18 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 19 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 18)
+          (match_operand:QI 16 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 18)
                            (match_operand:SI 34 "const_int_operand" "i")))
-          (match_operand:SI 17 "register_operand" ""))])]
+          (match_operand:QI 17 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 17"
-  "sbbo\t%1, %18, 0, 68"
+  "sbbo\t%1, %18, 0, 17"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_18_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 19 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 19 "register_operand" "r")
                            (match_operand:SI 20 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 33 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 34 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 35 "const_int_operand" "i"))))
-     (set (match_operand:SI 17 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 17 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 36 "const_int_operand" "i"))))
-     (set (match_operand:SI 18 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 18 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 37 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 18"
-  "lbbo\t%1, %19, %20, 72"
+  "lbbo\t%1, %19, %20, 18"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_18"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 19 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 19 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 20 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 33 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 34 "const_int_operand" "i"))))
-     (set (match_operand:SI 17 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 17 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 35 "const_int_operand" "i"))))
-     (set (match_operand:SI 18 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 19)
+     (set (match_operand:QI 18 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 36 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 18"
-  "lbbo\t%1, %19, 0, 72"
+  "lbbo\t%1, %19, 0, 18"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_18_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 19 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 19 "register_operand" "r")
                            (match_operand:SI 20 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 34 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 35 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 16 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 36 "const_int_operand" "i")))
-          (match_operand:SI 17 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 17 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 37 "const_int_operand" "i")))
-          (match_operand:SI 18 "register_operand" ""))])]
+          (match_operand:QI 18 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 18"
-  "sbbo\t%1, %19, %20, 72"
+  "sbbo\t%1, %19, %20, 18"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_18"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 19 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+    [(set (mem:QI (match_operand:SI 19 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 20 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 34 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 16 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 35 "const_int_operand" "i")))
-          (match_operand:SI 17 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 19)
+          (match_operand:QI 17 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 19)
                            (match_operand:SI 36 "const_int_operand" "i")))
-          (match_operand:SI 18 "register_operand" ""))])]
+          (match_operand:QI 18 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 18"
-  "sbbo\t%1, %19, 0, 72"
+  "sbbo\t%1, %19, 0, 18"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_19_offs"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (plus:SI (match_operand:SI 20 "register_operand" "r")
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (plus:SI (match_operand:SI 20 "register_operand" "r")
                            (match_operand:SI 21 "const_ubyte_operand" "I"))))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 33 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 34 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 35 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 36 "const_int_operand" "i"))))
-     (set (match_operand:SI 17 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 17 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 37 "const_int_operand" "i"))))
-     (set (match_operand:SI 18 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 18 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 38 "const_int_operand" "i"))))
-     (set (match_operand:SI 19 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 19 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 39 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 19"
-  "lbbo\t%1, %20, %21, 76"
+  "lbbo\t%1, %20, %21, 19"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*lbbo_multiple_19"
   [(match_parallel 0 "pru_load_multiple_operation"
-    [(set (match_operand:SI 1 "register_operand" "")
-          (mem:SI (match_operand:SI 20 "register_operand" "r")))
-     (set (match_operand:SI 2 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+    [(set (match_operand:QI 1 "register_operand" "")
+          (mem:QI (match_operand:SI 20 "register_operand" "r")))
+     (set (match_operand:QI 2 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 21 "const_int_operand" "i"))))
-     (set (match_operand:SI 3 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 3 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 22 "const_int_operand" "i"))))
-     (set (match_operand:SI 4 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 4 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 23 "const_int_operand" "i"))))
-     (set (match_operand:SI 5 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 5 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 24 "const_int_operand" "i"))))
-     (set (match_operand:SI 6 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 6 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 25 "const_int_operand" "i"))))
-     (set (match_operand:SI 7 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 7 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 26 "const_int_operand" "i"))))
-     (set (match_operand:SI 8 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 8 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 27 "const_int_operand" "i"))))
-     (set (match_operand:SI 9 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 9 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 28 "const_int_operand" "i"))))
-     (set (match_operand:SI 10 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 10 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 29 "const_int_operand" "i"))))
-     (set (match_operand:SI 11 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 11 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 30 "const_int_operand" "i"))))
-     (set (match_operand:SI 12 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 12 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 31 "const_int_operand" "i"))))
-     (set (match_operand:SI 13 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 13 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 32 "const_int_operand" "i"))))
-     (set (match_operand:SI 14 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 14 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 33 "const_int_operand" "i"))))
-     (set (match_operand:SI 15 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 15 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 34 "const_int_operand" "i"))))
-     (set (match_operand:SI 16 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 16 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 35 "const_int_operand" "i"))))
-     (set (match_operand:SI 17 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 17 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 36 "const_int_operand" "i"))))
-     (set (match_operand:SI 18 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 18 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 37 "const_int_operand" "i"))))
-     (set (match_operand:SI 19 "register_operand" "")
-          (mem:SI (plus:SI (match_dup 20)
+     (set (match_operand:QI 19 "register_operand" "")
+          (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 38 "const_int_operand" "i"))))])]
   "XVECLEN (operands[0], 0) == 19"
-  "lbbo\t%1, %20, 0, 76"
+  "lbbo\t%1, %20, 0, 19"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_19_offs"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (plus:SI (match_operand:SI 20 "register_operand" "r")
+    [(set (mem:QI (plus:SI (match_operand:SI 20 "register_operand" "r")
                            (match_operand:SI 21 "const_ubyte_operand" "I")))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 34 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 35 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 36 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 16 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 37 "const_int_operand" "i")))
-          (match_operand:SI 17 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 17 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 38 "const_int_operand" "i")))
-          (match_operand:SI 18 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 18 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 39 "const_int_operand" "i")))
-          (match_operand:SI 19 "register_operand" ""))])]
+          (match_operand:QI 19 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 19"
-  "sbbo\t%1, %20, %21, 76"
+  "sbbo\t%1, %20, %21, 19"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
 (define_insn "*sbbo_multiple_19"
   [(match_parallel 0 "pru_store_multiple_operation"
-    [(set (mem:SI (match_operand:SI 20 "register_operand" "r"))
-          (match_operand:SI 1 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+    [(set (mem:QI (match_operand:SI 20 "register_operand" "r"))
+          (match_operand:QI 1 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 21 "const_int_operand" "i")))
-          (match_operand:SI 2 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 2 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 22 "const_int_operand" "i")))
-          (match_operand:SI 3 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 3 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 23 "const_int_operand" "i")))
-          (match_operand:SI 4 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 4 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 24 "const_int_operand" "i")))
-          (match_operand:SI 5 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 5 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 25 "const_int_operand" "i")))
-          (match_operand:SI 6 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 6 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 26 "const_int_operand" "i")))
-          (match_operand:SI 7 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 7 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 27 "const_int_operand" "i")))
-          (match_operand:SI 8 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 8 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 28 "const_int_operand" "i")))
-          (match_operand:SI 9 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 9 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 29 "const_int_operand" "i")))
-          (match_operand:SI 10 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 10 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 30 "const_int_operand" "i")))
-          (match_operand:SI 11 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 11 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 31 "const_int_operand" "i")))
-          (match_operand:SI 12 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 12 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 32 "const_int_operand" "i")))
-          (match_operand:SI 13 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 13 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 33 "const_int_operand" "i")))
-          (match_operand:SI 14 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 14 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 34 "const_int_operand" "i")))
-          (match_operand:SI 15 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 15 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 35 "const_int_operand" "i")))
-          (match_operand:SI 16 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 16 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 36 "const_int_operand" "i")))
-          (match_operand:SI 17 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 17 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 37 "const_int_operand" "i")))
-          (match_operand:SI 18 "register_operand" ""))
-     (set (mem:SI (plus:SI (match_dup 20)
+          (match_operand:QI 18 "register_operand" ""))
+     (set (mem:QI (plus:SI (match_dup 20)
                            (match_operand:SI 38 "const_int_operand" "i")))
-          (match_operand:SI 19 "register_operand" ""))])]
+          (match_operand:QI 19 "register_operand" ""))])]
   "XVECLEN (operands[0], 0) == 19"
-  "sbbo\t%1, %20, 0, 76"
+  "sbbo\t%1, %20, 0, 19"
   [(set_attr "type" "ld")
    (set_attr "length" "4")])
 
diff --git a/gcc/config/pru/pru-ldst-multiple.ml b/gcc/config/pru/pru-ldst-multiple.ml
index 23747a37e96..dc79584b8ea 100644
--- a/gcc/config/pru/pru-ldst-multiple.ml
+++ b/gcc/config/pru/pru-ldst-multiple.ml
@@ -29,7 +29,7 @@
      ocaml pru-ldst-multiple.ml >/path/to/gcc/config/pru/ldst-multiple.md
 *)
 
-let destreg nregs first =
+let write_addr_reg nregs first =
   if not first then
     Printf.sprintf "(match_dup %d)" (nregs + 1)
   else
@@ -39,12 +39,12 @@ let destreg nregs first =
 let write_ldm_set nregs opnr first do_first_offs =
   let indent = "     " in
   Printf.printf "%s" (if first then "    [" else indent);
-  Printf.printf "(set (match_operand:SI %d \"register_operand\" \"\")\n" opnr;
-  Printf.printf "%s     (mem:SI " indent;
+  Printf.printf "(set (match_operand:QI %d \"register_operand\" \"\")\n" opnr;
+  Printf.printf "%s     (mem:QI " indent;
   if (first && not do_first_offs) then begin
-    Printf.printf "%s" (destreg nregs first);
+    Printf.printf "%s" (write_addr_reg nregs first);
   end else begin
-    Printf.printf "(plus:SI %s" (destreg nregs first);
+    Printf.printf "(plus:SI %s" (write_addr_reg nregs first);
     Printf.printf "\n%s                      (match_operand:SI %d "
       indent
       (if do_first_offs then (nregs + 1 + opnr) else (nregs + opnr));
@@ -58,12 +58,12 @@ let write_ldm_set nregs opnr first do_first_offs =
 let write_stm_set nregs opnr first do_first_offs =
   let indent = "     " in
   Printf.printf "%s" (if first then "    [" else indent);
-  Printf.printf "(set (mem:SI ";
+  Printf.printf "(set (mem:QI ";
   if (first && not do_first_offs) then begin
-    Printf.printf "%s" (destreg nregs first);
+    Printf.printf "%s" (write_addr_reg nregs first);
   end else begin
     Printf.printf "(plus:SI ";
-    Printf.printf "%s" (destreg nregs first);
+    Printf.printf "%s" (write_addr_reg nregs first);
     Printf.printf "\n%s                      (match_operand:SI %d "
       indent
       (if do_first_offs then (nregs + 1 + opnr) else (nregs + opnr));
@@ -73,7 +73,7 @@ let write_stm_set nregs opnr first do_first_offs =
       Printf.printf "\"const_int_operand\" \"i\"))"
     end;
   end;
-  Printf.printf ")\n%s     (match_operand:SI %d \"register_operand\" \"\"))" indent opnr
+  Printf.printf ")\n%s     (match_operand:QI %d \"register_operand\" \"\"))" indent opnr
 
 let rec write_pat_sets func opnr first n_left do_first_offs =
   func opnr first do_first_offs;
@@ -94,9 +94,9 @@ let write_pattern_1 name ls nregs do_first_offs write_set_fn =
   write_pat_sets (write_set_fn nregs) 1 true nregs do_first_offs;
   Printf.printf ")]\n  \"XVECLEN (operands[0], 0) == %d\"\n" nregs;
   if do_first_offs then begin
-    Printf.printf "  \"%s\\t%%1, %%%d, %%%d, %d\"\n" name (nregs + 1) (nregs + 2) (nregs * 4);
+    Printf.printf "  \"%s\\t%%1, %%%d, %%%d, %d\"\n" name (nregs + 1) (nregs + 2) (nregs * 1);
   end else begin
-    Printf.printf "  \"%s\\t%%1, %%%d, 0, %d\"\n" name (nregs + 1) (nregs * 4);
+    Printf.printf "  \"%s\\t%%1, %%%d, 0, %d\"\n" name (nregs + 1) (nregs * 1);
   end;
   Printf.printf "  [(set_attr \"type\" \"ld\")\n";
   Printf.printf "   (set_attr \"length\" \"4\")";
diff --git a/gcc/config/pru/pru.c b/gcc/config/pru/pru.c
index 85643bac9a3..8d25424f7b2 100644
--- a/gcc/config/pru/pru.c
+++ b/gcc/config/pru/pru.c
@@ -1,5 +1,5 @@
 /* Target machine subroutines for TI PRU.
-   Copyright (C) 2014 Free Software Foundation, Inc.
+   Copyright (C) 2014-2017 Free Software Foundation, Inc.
    Dimitar Dimitrov <dimitar@dinux.eu>
 
    This file is part of GCC.
@@ -65,7 +65,7 @@ struct GTY (()) machine_function
      with register save masks, and offsets for the current function.  */
 
   /* Mask of registers to save.  */
-  unsigned int save_mask;
+  HARD_REG_SET save_mask;
   /* Number of bytes that the entire frame takes up.  */
   int total_size;
   /* Number of bytes that variables take up.  */
@@ -98,7 +98,7 @@ static int
 pru_compute_frame_layout (void)
 {
   unsigned int regno;
-  unsigned int save_mask = 0;
+  HARD_REG_SET *save_mask;
   int total_size;
   int var_size;
   int out_args_size;
@@ -107,6 +107,9 @@ pru_compute_frame_layout (void)
   if (cfun->machine->initialized)
     return cfun->machine->total_size;
 
+  save_mask = &cfun->machine->save_mask;
+  CLEAR_HARD_REG_SET (*save_mask);
+
   var_size = PRU_STACK_ALIGN (get_frame_size ());
   out_args_size = PRU_STACK_ALIGN (crtl->outgoing_args_size);
   total_size = var_size + out_args_size;
@@ -116,17 +119,17 @@ pru_compute_frame_layout (void)
   for (regno = 0; regno <= LAST_GP_REG; regno++)
     if (prologue_saved_reg_p (regno))
       {
-	save_mask |= 1 << regno;
-	save_reg_size += 4;
+	SET_HARD_REG_BIT (*save_mask, regno);
+	save_reg_size += 1;
       }
 
   cfun->machine->fp_save_offset = 0;
-  if (save_mask & (1 << HARD_FRAME_POINTER_REGNUM))
+  if (TEST_HARD_REG_BIT (*save_mask, HARD_FRAME_POINTER_REGNUM))
     {
       int fp_save_offset = 0;
       for (regno = 0; regno < HARD_FRAME_POINTER_REGNUM; regno++)
-	if (save_mask & (1 << regno))
-	  fp_save_offset += 4;
+	if (TEST_HARD_REG_BIT (*save_mask, regno))
+	  fp_save_offset += 1;
 
       cfun->machine->fp_save_offset = fp_save_offset;
     }
@@ -136,7 +139,6 @@ pru_compute_frame_layout (void)
   total_size += PRU_STACK_ALIGN (crtl->args.pretend_args_size);
 
   /* Save other computed information.  */
-  cfun->machine->save_mask = save_mask;
   cfun->machine->total_size = total_size;
   cfun->machine->var_size = var_size;
   cfun->machine->args_size = out_args_size;
@@ -215,14 +217,14 @@ xbbo_next_reg_cluster (int regno_start, int *sp_offset, bool do_store)
 
   /* Skip the empty slots.  */
   for (; regno_start <= LAST_GP_REG; )
-    if (cfun->machine->save_mask & (1 << regno_start))
+    if (TEST_HARD_REG_BIT (cfun->machine->save_mask, regno_start))
       break;
     else
       regno_start++;
 
   /* Find the largest consecutive group of registers to save.  */
-  for (regno = regno_start; regno <= LAST_GP_REG; )
-    if (cfun->machine->save_mask & (1 << regno))
+  for (regno = regno_start; regno <= LAST_GP_REG && nregs < MAX_XBBO_BURST_LEN; )
+    if (TEST_HARD_REG_BIT (cfun->machine->save_mask, regno))
       {
 	regno++;
 	nregs++;
@@ -241,10 +243,10 @@ xbbo_next_reg_cluster (int regno_start, int *sp_offset, bool do_store)
 
   if (do_store)
     insn = gen_store_multiple (gen_frame_mem (Pmode, addr),
-			       gen_rtx_REG (SImode, regno_start),
+			       gen_rtx_REG (QImode, regno_start),
 			       GEN_INT (nregs));
   else
-    insn = gen_load_multiple (gen_rtx_REG (SImode, regno_start),
+    insn = gen_load_multiple (gen_rtx_REG (QImode, regno_start),
 			      gen_frame_mem (Pmode, addr),
 			      GEN_INT (nregs));
 
@@ -399,8 +401,7 @@ pru_get_return_address (int count)
     return const0_rtx;
 
   /* Return r3.w2.  */
-  return gen_rtx_LSHIFTRT (SImode, get_hard_reg_initial_val (Pmode, RA_REGNO),
-			   GEN_INT (16));
+  return get_hard_reg_initial_val (HImode, RA_REGNO);
 }
 
 /* Implement FUNCTION_PROFILER macro.  */
@@ -451,6 +452,8 @@ prologue_saved_reg_p (unsigned regno)
 
   if (regno == RA_REGNO && df_regs_ever_live_p (RA_REGNO))
     return true;
+  if (regno == RA_REGNO + 1 && df_regs_ever_live_p (RA_REGNO + 1))
+    return true;
 
   return false;
 }
@@ -524,6 +527,17 @@ pru_option_override (void)
   SUBTARGET_OVERRIDE_OPTIONS;
 #endif
 
+  /* Unwind tables currently require a frame pointer for correctness,
+     see toplev.c:process_options().  */
+
+  if ((flag_unwind_tables
+       || flag_non_call_exceptions
+       || flag_asynchronous_unwind_tables)
+      && !ACCUMULATE_OUTGOING_ARGS)
+    {
+      flag_omit_frame_pointer = 0;
+    }
+
   /* Check for unsupported options.  */
   if (flag_pic == 1)
     warning (OPT_fpic, "-fpic is not supported");
@@ -1162,7 +1176,7 @@ pru_comparison_str (enum rtx_code cond)
      B: prints 'c' or 'b' for CTABLE or REG base in a memory address
      H: Higher 16-bits of a const_int operand
      L: Lower 16-bits of a const_int operand
-     N: prints next register (upper 32bits of a 64bit REG couple)
+     N: prints next 32-bit register (upper 32bits of a 64bit REG couple)
      P: prints swapped condition.
      Q: prints swapped and reversed condition.
      R: prints reversed condition.
@@ -1218,15 +1232,30 @@ pru_print_operand (FILE *file, rtx op, int letter)
       }
       else if (letter == 'N')
       {
-	      gcc_assert (REGNO (op) < 29);
-	      fprintf (file, "%s", reg_names[REGNO (op) + 1]);
+	      gcc_assert (REGNO (op) <= LAST_NONIO_GP_REG);
+	      fprintf (file, "%s", reg_names[REGNO (op) + 4]);
 	      return;
       }
       else if (letter == 'x')
       {
 	      const int sz = GET_MODE_SIZE (GET_MODE (op));
-	      const char *subreg = (sz == 1) ? ".b0" : ((sz == 2) ? ".w0" : "");
-	      fprintf (file, "%s%s", reg_names[REGNO (op)], subreg);
+	      const int base_reg = REGNO (op) / 4;
+	      const char *suffix = "";
+	      switch ((sz << 8) | (REGNO (op) % 4))
+		{
+		case (1 << 8) | 0: suffix = ".b0"; break;
+		case (1 << 8) | 1: suffix = ".b1"; break;
+		case (1 << 8) | 2: suffix = ".b2"; break;
+		case (1 << 8) | 3: suffix = ".b3"; break;
+		case (2 << 8) | 0: suffix = ".w0"; break;
+		case (2 << 8) | 1: suffix = ".w1"; break;
+		case (2 << 8) | 2: suffix = ".w2"; break;
+		case (4 << 8) | 0: suffix = ""; break;
+		default:
+		  printf("%s: r=%d, sz=%d\n", __func__, REGNO (op), sz);
+		  gcc_unreachable ();
+		}
+	      fprintf (file, "r%d%s", base_reg, suffix);
 	      return;
       }
       break;
@@ -1307,7 +1336,7 @@ pru_print_operand (FILE *file, rtx op, int letter)
 	      rtx op1 = XEXP (base, 1);
 
 	      /* PLUS cannot have two constant operands, so one
-		 of them must be a REG, hence we must check for an
+		 of them mu't be a REG, hence we must check for an
 		 exact base address.  */
 	      if (ctable_base_operand (op0, VOIDmode)
 		  || ctable_base_operand (op1, VOIDmode))
@@ -1542,7 +1571,7 @@ pru_arg_partial_bytes (cumulative_args_t cum_v,
 
   if (cum->regs_used < NUM_ARG_REGS
       && cum->regs_used + param_size > NUM_ARG_REGS)
-    return (NUM_ARG_REGS - cum->regs_used) * UNITS_PER_WORD;
+    return (NUM_ARG_REGS - cum->regs_used) /* * UNITS_PER_WORD */;
 
   return 0;
 }
@@ -1568,12 +1597,15 @@ pru_function_arg_advance (cumulative_args_t cum_v, machine_mode mode,
     param_size = GET_MODE_SIZE (mode);
 
   /* Convert to words (round up).  */
-  param_size = (UNITS_PER_WORD - 1 + param_size) / UNITS_PER_WORD;
+  //param_size = (UNITS_PER_WORD - 1 + param_size) / UNITS_PER_WORD;
 
   if (cum->regs_used + param_size > NUM_ARG_REGS)
     cum->regs_used = NUM_ARG_REGS;
   else
     cum->regs_used += param_size;
+
+  /* Align to the next word.  */
+  cum->regs_used = (cum->regs_used + 3) & ~3lu;
 }
 
 /* Implement TARGET_FUNCTION_VALUE.  */
@@ -1602,7 +1634,7 @@ pru_function_value_regno_p (const unsigned int regno)
 static bool
 pru_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)
 {
-  return (int_size_in_bytes (type) > (2 * UNITS_PER_WORD)
+  return (int_size_in_bytes (type) > (2 * 4 * UNITS_PER_WORD)
 	  || int_size_in_bytes (type) == -1);
 }
 
diff --git a/gcc/config/pru/pru.h b/gcc/config/pru/pru.h
index bb7737ad005..d340cc24695 100644
--- a/gcc/config/pru/pru.h
+++ b/gcc/config/pru/pru.h
@@ -36,6 +36,13 @@
 
 #define DRIVER_SELF_SPECS " %{mmcu=*:-specs=device-specs/%*%s %<mmcu=*} "
 
+#undef  CC1PLUS_SPEC
+#define CC1PLUS_SPEC                                    \
+  "%(cc1) "                                             \
+  "%{!frtti:-fno-rtti} "                                \
+  "%{!fenforce-eh-specs:-fno-enforce-eh-specs} "        \
+  "%{!fexceptions:-fno-exceptions} "
+
 #undef  ASM_SPEC
 #define ASM_SPEC				\
   "%{mno-relax:--mno-link-relax} "
@@ -51,6 +58,9 @@
 #undef  ENDFILE_SPEC
 #define ENDFILE_SPEC "-lgloss"
 
+/* No libstdc++ for now.  Empty string doesn't work.  */
+#define LIBSTDCXX "gcc"
+
 /* TI ABI mandates that ELF symbols do not start with any prefix.  */
 #undef USER_LABEL_PREFIX
 #define USER_LABEL_PREFIX ""
@@ -64,8 +74,16 @@
 #define BITS_BIG_ENDIAN 0
 #define BYTES_BIG_ENDIAN 0
 #define WORDS_BIG_ENDIAN 0
-#define BITS_PER_WORD 32
+#define BITS_PER_WORD 8
+
+#ifdef IN_LIBGCC2
+/* This is to get correct SI and DI modes in libgcc2.c (32 and 64 bits).  */
 #define UNITS_PER_WORD 4
+#else
+/* Width of a word, in units (bytes).  */
+#define UNITS_PER_WORD 1
+#endif
+
 #define POINTER_SIZE 32
 #define BIGGEST_ALIGNMENT 32
 #define STRICT_ALIGNMENT 0
@@ -121,36 +139,45 @@
 #define FIXED_REGISTERS			      \
   {					      \
 /*	  +0  1  2  3  4  5  6  7  8  9 */    \
-/*   0 */  0, 0, 1, 1, 0, 0, 0, 0, 0, 0,      \
-/*  10 */  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      \
-/*  20 */  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      \
-/*  30 */  1, 1, 1, 1, 1, 1,		      \
+/*   0 */  0,0,0,0, 0,0,0,0, 1,1,1,1, 1,1,1,1, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,      \
+/*  10 */  0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,      \
+/*  20 */  0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,      \
+/*  30 */  1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1		      \
   }
 
 /* Call used == caller saved + fixed regs + args + ret vals.  */
 #define CALL_USED_REGISTERS		      \
   {					      \
 /*	  +0  1  2  3  4  5  6  7  8  9 */    \
-/*   0 */  1, 1, 1, 1, 0, 0, 0, 0, 0, 0,      \
-/*  10 */  0, 0, 0, 0, 1, 1, 1, 1, 1, 1,      \
-/*  20 */  1, 1, 1, 1, 1, 1, 1, 1, 1, 1,      \
-/*  30 */  1, 1, 1, 1, 1, 1,		      \
+/*   0 */  1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,      \
+/*  10 */  0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1,      \
+/*  20 */  1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1,      \
+/*  30 */  1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1		      \
   }
 
 /* Try to allocate r14-r29 first.  Use r0 and r1 only if necessary.  */
 
+#define _R(X)  (X) * 4 + 0, (X) * 4 + 1, (X) * 4 + 2, (X) * 4 + 3
 #define REG_ALLOC_ORDER			      \
   {					      \
-    14, 15, 16, 17, 18, 19, 20, 21, 22, 23,   \
-    24, 25, 26, 27, 28, 29, 0,  1,	      \
-    5,  6,  7,  8,  9,  10, 11, 12, 13,	      \
-    4,					      \
-    2,  3,				      \
-    30, 31, 32, 33, 34, 35		      \
+    _R(14), _R(15), _R(16), _R(17), _R(18), _R(19), _R(20), _R(21), _R(22), _R(23),  \
+    _R(24), _R(25), _R(26), _R(27), _R(28), _R(29), _R(0), _R( 1),	      \
+    _R(5), _R( 6), _R( 7), _R( 8), _R( 9), _R( 10), _R(11), _R(12), _R(13),	      \
+    _R(4),					      \
+    _R(2), _R( 3),				      \
+    _R(30), _R(31), _R(32), _R(33), _R(34), _R(35)		      \
   }
 
 #define MODES_TIEABLE_P(MODE1, MODE2) 1
-#define HARD_REGNO_MODE_OK(REGNO, MODE) 1
+#define HARD_REGNO_MODE_OK(REGNO, MODE) ((MODE) == SImode ?		    \
+      ((REGNO) % 4 == 0)						    \
+     : (MODE) == Pmode ?						    \
+      ((REGNO) % 4 == 0)						    \
+     : (MODE) == DImode ?						    \
+      ((REGNO) % 4 == 0)						    \
+     : (MODE) == HImode ?						    \
+      ((REGNO) % 2 == 0)						    \
+     : 1)
 #define HARD_REGNO_NREGS(REGNO, MODE)	      \
   ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)
 
@@ -177,6 +204,7 @@ enum reg_class
 
 #define GENERAL_REGS ALL_REGS
 
+#if 0
 #define REG_CLASS_CONTENTS			\
   {						\
     /* NO_REGS	      */ { 0, 0},		\
@@ -185,6 +213,15 @@ enum reg_class
     /* GP_REGS	      */ { ~0, 0},		\
     /* ALL_REGS	      */ { ~0,~0}		\
   }
+#endif
+#define REG_CLASS_CONTENTS			\
+  {						\
+    /* NO_REGS	      */ { 0, 0, 0, 0, 0},	\
+    /* SIB_REGS	      */ { 0xf, 0xff000000, ~0, 0xffffff, 0},	\
+    /* LOOPCNTR_REGS  */ { 0, 0, 0, 0, 0xf},		\
+    /* GP_REGS	      */ { ~0, ~0, ~0, ~0, 0},		\
+    /* ALL_REGS	      */ { ~0,~0, ~0, ~0, ~0}		\
+  }
 
 
 #define GP_REG_P(REGNO) ((unsigned)(REGNO) <= LAST_GP_REG)
@@ -205,12 +242,15 @@ enum reg_class
 #define SHIFT_INT(X) ((X) >= 0 && (X) <= 31)
 
 #define UHWORD_INT(X) (IN_RANGE ((X), 0, 0xffff))
+#define SHWORD_INT(X) (IN_RANGE ((X), -32768, 32767))
 #define UBYTE_INT(X) (IN_RANGE ((X), 0, 0xff))
 
 /* Say that the epilogue uses the return address register.  Note that
    in the case of sibcalls, the values "used by the epilogue" are
    considered live at the start of the called function.  */
-#define EPILOGUE_USES(REGNO) (epilogue_completed && (REGNO) == RA_REGNO)
+#define EPILOGUE_USES(REGNO) (epilogue_completed &&	      \
+			      ((REGNO) == RA_REGNO)	      \
+			       || (REGNO) == (RA_REGNO + 1))
 
 /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,
    the stack pointer does not matter.  The value is tested only in
@@ -228,8 +268,7 @@ enum reg_class
 #define FIRST_PARM_OFFSET(FUNDECL) 0
 
 /* Before the prologue, RA lives in r3.w2.  */
-#define INCOMING_RETURN_ADDR_RTX				    \
-  gen_rtx_LSHIFTRT (SImode, gen_rtx_REG (Pmode, RA_REGNO), GEN_INT (16))
+#define INCOMING_RETURN_ADDR_RTX	gen_rtx_REG (HImode, RA_REGNO)
 
 #define RETURN_ADDR_RTX(C,F) pru_get_return_address (C)
 
@@ -308,44 +347,45 @@ typedef struct pru_args
 
 #define GLOBAL_ASM_OP "\t.global\t"
 
+#define __pru_R(X)  X, X".b1", X".b2", X".b3"
 #define REGISTER_NAMES \
   {       \
-    "r0", \
-    "r1", \
-    "sp", \
-    "ra", \
-    "fp", \
-    "r5", \
-    "r6", \
-    "r7", \
-    "r8", \
-    "r9", \
-    "r10", \
-    "r11", \
-    "r12", \
-    "r13", \
-    "r14", \
-    "r15", \
-    "r16", \
-    "r17", \
-    "r18", \
-    "r19", \
-    "r20", \
-    "r21", \
-    "r22", \
-    "r23", \
-    "r24", \
-    "r25", \
-    "r26", \
-    "r27", \
-    "r28", \
-    "r29", \
-    "r30", \
-    "r31", \
-    "loopcntr_reg", \
-    "pc", \
-    "fake_fp", \
-    "fake_ap", \
+    __pru_R("r0"), \
+    __pru_R("r1"), \
+    __pru_R("sp"), \
+    __pru_R("ra"), \
+    __pru_R("fp"), \
+    __pru_R("r5"), \
+    __pru_R("r6"), \
+    __pru_R("r7"), \
+    __pru_R("r8"), \
+    __pru_R("r9"), \
+    __pru_R("r10"), \
+    __pru_R("r11"), \
+    __pru_R("r12"), \
+    __pru_R("r13"), \
+    __pru_R("r14"), \
+    __pru_R("r15"), \
+    __pru_R("r16"), \
+    __pru_R("r17"), \
+    __pru_R("r18"), \
+    __pru_R("r19"), \
+    __pru_R("r20"), \
+    __pru_R("r21"), \
+    __pru_R("r22"), \
+    __pru_R("r23"), \
+    __pru_R("r24"), \
+    __pru_R("r25"), \
+    __pru_R("r26"), \
+    __pru_R("r27"), \
+    __pru_R("r28"), \
+    __pru_R("r29"), \
+    __pru_R("r30"), \
+    __pru_R("r31"), \
+    __pru_R("loopcntr_reg"), \
+    __pru_R("pc"), \
+    __pru_R("fake_fp"), \
+    __pru_R("fake_ap"), \
 }
 
 #define ADDITIONAL_REGISTER_NAMES       \
diff --git a/gcc/config/pru/pru.md b/gcc/config/pru/pru.md
index b679de1ef44..8db18eb6d86 100644
--- a/gcc/config/pru/pru.md
+++ b/gcc/config/pru/pru.md
@@ -22,31 +22,28 @@
 ;; Register numbers.
 (define_constants
   [
-   (FIRST_ARG_REGNO	    14)	; Argument registers.
-   (LAST_ARG_REGNO	    29)	;
-   (FIRST_RETVAL_REGNO	    14)	; Return value registers.
-   (LAST_RETVAL_REGNO	    15)	;
-   (PROLOGUE_TEMP_REGNO	    1)	; Temporary register to use in prologue.
-
-   (RA_REGNO		    3)	; Return address register __container__.
-				; NB! Per TI's ABI, we are using r3.w2, but
-				; PRU GCC does not currently support
-				; sub-hw-registers.
-   (FP_REGNO		    4)	; Frame pointer register.
-   (LAST_NONIO_GP_REG	    29)	; Last non-I/O general purpose register.
-   (LOOPCNTR_REG	    32)	; internal LOOP counter register
-   (LAST_GP_REG		    33)	; Last general purpose register.
+   (FIRST_ARG_REGNO	    56)	; Argument registers.
+   (LAST_ARG_REGNO	    116)	;
+   (FIRST_RETVAL_REGNO	    56)	; Return value registers.
+   (LAST_RETVAL_REGNO	    60)	;
+   (PROLOGUE_TEMP_REGNO	    4)	; Temporary register to use in prologue.
+
+   (RA_REGNO		    14)	; Return address register r3.w2.
+   (FP_REGNO		    16)	; Frame pointer register.
+   (LAST_NONIO_GP_REG	    116)	; Last non-I/O general purpose register.
+   (LOOPCNTR_REG	    128)	; internal LOOP counter register
+   (LAST_GP_REG		    132)	; Last general purpose register.
 
    ;; Target register definitions.
-   (STACK_POINTER_REGNUM	2)
+   (STACK_POINTER_REGNUM	8)
    (HARD_FRAME_POINTER_REGNUM	FP_REGNO)
-   (PC_REGNUM			33)
-   (FRAME_POINTER_REGNUM	34)
-   (ARG_POINTER_REGNUM		35)
-   (FIRST_PSEUDO_REGISTER	36)
+   (PC_REGNUM			132)
+   (FRAME_POINTER_REGNUM	136)
+   (ARG_POINTER_REGNUM		140)
+   (FIRST_PSEUDO_REGISTER	144)
 
    ;; Misc
-   (MAX_XBBO_BURST_LEN	    20)	; Artificially limited by GCC - see how
+   (MAX_XBBO_BURST_LEN	    19)	; Artificially limited by GCC - see how
 				; genextract.c uses 'a'..'z' to record
 				; "path to a vector".
   ]
@@ -88,6 +85,7 @@
 
 (define_mode_iterator ALL [QI HI SI])
 (define_mode_iterator HISI [HI SI])
+(define_mode_iterator QIHI [QI HI])
 (define_mode_iterator BIGI [DI TI OI XI])
 
 ;; EQS0/0 for extension source 0/1 and EQD for extension destination patterns.
@@ -136,8 +134,19 @@
 ;;
 ;; Note: Assume that Program Mem (T constraint) can fit in 16 bits!
 (define_insn "prumov_ldi<mode>"
-  [(set (match_operand:ALL 0 "register_operand"	      "=r,r,r")
-	(match_operand:ALL 1 "immediate_operand"       "T,J,i"))]
+  [(set (match_operand:QIHI 0 "register_operand"	"=r,r,r")
+	(match_operand:QIHI 1 "immediate_operand"       "T,J,N"))]
+  ""
+  "@
+    ldi\\t%x0, %%pmem(%1)
+    ldi\\t%x0, %1
+    ldi\\t%x0, (%1) & 0xffff"
+  [(set_attr "type" "alu,alu,alu")
+   (set_attr "length" "4,4,4")])
+
+(define_insn "prumov_ldisi"
+  [(set (match_operand:SI 0 "register_operand"	      "=r,r,r")
+	(match_operand:SI 1 "immediate_operand"       "T,J,i"))]
   ""
   "@
     ldi\\t%x0, %%pmem(%1)
@@ -169,7 +178,7 @@
 	/* careful with overlapping source and destination regs.  */
 	gcc_assert (GP_REG_P (REGNO (operands[0])));
 	gcc_assert (GP_REG_P (REGNO (operands[1])));
-	if (REGNO (operands[0]) == (REGNO (operands[1]) + 1))
+	if (REGNO (operands[0]) == (REGNO (operands[1]) + 4))
 	  return "mov\\t%N0, %N1\;mov\\t%0, %1";
 	else
 	  return "mov\\t%0, %1\;mov\\t%N0, %N1";
@@ -192,7 +201,7 @@
 ;;   op1: first memory location
 ;;   op2: number of consecutive registers
 (define_expand "load_multiple"
-  [(match_par_dup 3 [(set (match_operand:SI 0 "" "")
+  [(match_par_dup 3 [(set (match_operand:QI 0 "" "")
 			  (match_operand:SI 1 "" ""))
 		     (use (match_operand:SI 2 "" ""))])]
   ""
@@ -217,8 +226,8 @@
 
   for (i = 0; i < count; i++)
     XVECEXP (operands[3], 0, i)
-      = gen_rtx_SET (gen_rtx_REG (SImode, first_regno + i),
-		     gen_rtx_MEM (SImode,
+      = gen_rtx_SET (gen_rtx_REG (QImode, first_regno + i),
+		     gen_rtx_MEM (QImode,
 				  plus_constant (Pmode,
 						 XEXP (operands[1], 0),
 						 i * UNITS_PER_WORD)));
@@ -229,8 +238,8 @@
 ;;   op1: first of the consecutive registers
 ;;   op2: number of consecutive registers
 (define_expand "store_multiple"
-  [(match_par_dup 3 [(set (match_operand:SI 0 "" "")
-			  (match_operand:SI 1 "" ""))
+  [(match_par_dup 3 [(set (match_operand:QI 0 "" "")
+			  (match_operand:QI 1 "" ""))
 		     (use (match_operand:SI 2 "" ""))])]
   ""
   "
@@ -254,11 +263,11 @@
 
   for (i = 0; i < count; i++)
     XVECEXP (operands[3], 0, i)
-      = gen_rtx_SET (gen_rtx_MEM (SImode,
+      = gen_rtx_SET (gen_rtx_MEM (QImode,
 				  plus_constant (Pmode,
 						 XEXP (operands[0], 0),
 						 i * UNITS_PER_WORD)),
-		     gen_rtx_REG (SImode, first_regno + i));
+		     gen_rtx_REG (QImode, first_regno + i));
 }")
 
 ;; Include the machine-generated patterns for all LBBO/SBBO multuple-reg
@@ -365,6 +374,9 @@
 (define_code_iterator LOGICAL [and ior xor umin umax])
 (define_code_attr logical_asm [(and "and") (ior "or") (xor "xor") (umin "min") (umax "max")])
 
+(define_code_iterator LOGICAL_BITOP [and ior xor])
+(define_code_attr logical_bitop_asm [(and "and") (ior "or") (xor "xor")])
+
 (define_expand "<code>si3"
   [(set (match_operand:SI 0 "register_operand"			"=r")
 	(LOGICAL:SI (match_operand:SI 1 "register_operand"	"%r")
@@ -406,8 +418,38 @@
 
 ;; Include ALU patterns with zero-extension of operands.  That's where
 ;; the real insns are defined.
+
 (include "alu-zext.md")
 
+(define_insn "<code>di3"
+  [(set (match_operand:DI 0 "register_operand" "=&r,&r")
+        (LOGICAL_BITOP:DI
+          (match_operand:DI 1 "register_operand"     "%r,r")
+          (match_operand:DI 2 "reg_or_ubyte_operand"  "r,I")))]
+  ""
+  "@
+   <logical_bitop_asm>\\t%0, %1, %2\;<logical_asm>\\t%N0, %N1, %N2
+   <logical_bitop_asm>\\t%0, %1, %2\;<logical_asm>\\t%N0, %N1, 0"
+  [(set_attr "type" "alu,alu")
+   (set_attr "length" "8,8")])
+
+
+(define_insn "one_cmpldi2"
+  [(set (match_operand:DI 0 "register_operand"		"=r")
+	(not:DI (match_operand:DI 1 "register_operand"	"r")))]
+  ""
+  {
+    /* careful with overlapping source and destination regs.  */
+    gcc_assert (GP_REG_P (REGNO (operands[0])));
+    gcc_assert (GP_REG_P (REGNO (operands[1])));
+    if (REGNO (operands[0]) == (REGNO (operands[1]) + 4))
+      return "not\\t%N0, %N1\;not\\t%0, %1";
+    else
+      return "not\\t%0, %1\;not\\t%N0, %N1";
+  }
+  [(set_attr "type" "alu")
+   (set_attr "length" "8")])
+
 ;; Multiply instruction.  Idea for fixing registers comes from the AVR backend.
 
 (define_expand "mulsi3"
@@ -422,20 +464,20 @@
 
 
 (define_expand "mulsi3_fixinp"
-  [(set (reg:SI 28) (match_operand:SI 1 "register_operand" ""))
-   (set (reg:SI 29) (match_operand:SI 2 "register_operand" ""))
-   (parallel [(set (reg:SI 26) (mult:SI (reg:SI 28) (reg:SI 29)))
-	      (clobber (reg:SI 25))
-	      (clobber (reg:SI 27))])
-   (set (match_operand:QI 0 "register_operand" "") (reg:SI 26))]
+  [(set (reg:SI 112) (match_operand:SI 1 "register_operand" ""))
+   (set (reg:SI 116) (match_operand:SI 2 "register_operand" ""))
+   (parallel [(set (reg:SI 104) (mult:SI (reg:SI 112) (reg:SI 116)))
+	      (clobber (reg:SI 100))
+	      (clobber (reg:SI 108))])
+   (set (match_operand:QI 0 "register_operand" "") (reg:SI 104))]
   ""
   {
   })
 
 (define_insn "*mulsi3_prumac"
-  [(set (reg:SI 26) (mult:SI (reg:SI 28) (reg:SI 29)))
-   (clobber (reg:SI 25))
-   (clobber (reg:SI 27))]
+  [(set (reg:SI 104) (mult:SI (reg:SI 112) (reg:SI 116)))
+   (clobber (reg:SI 100))
+   (clobber (reg:SI 108))]
   ""
   "ldi\\tr25, 0\;xout\\t0, r25, 1\;xin\\t0, r26, 8"
   [(set_attr "type" "alu")
diff --git a/libgcc/config/pru/lib2shift.c b/libgcc/config/pru/lib2shift.c
index 1677dcc2098..ce4b5fe643e 100644
--- a/libgcc/config/pru/lib2shift.c
+++ b/libgcc/config/pru/lib2shift.c
@@ -27,8 +27,12 @@ typedef		  int  sint32_type   __attribute__ ((mode (SI)));
 typedef unsigned  int  uint32_type   __attribute__ ((mode (SI)));
 typedef		  int  sint16_type   __attribute__ ((mode (HI)));
 typedef unsigned  int  uint16_type   __attribute__ ((mode (HI)));
+typedef		  int  sint8_type   __attribute__ ((mode (QI)));
+typedef unsigned  int  uint8_type   __attribute__ ((mode (QI)));
 
 sint32_type __ashrsi3 (sint32_type in, char bit);
+sint16_type __ashrhi3 (sint16_type in, char bit);
+sint8_type __ashrqi3 (sint8_type in, char bit);
 
 sint32_type
 __ashrsi3 (sint32_type in, char bit)
@@ -46,3 +50,34 @@ __ashrsi3 (sint32_type in, char bit)
   return in;
 }
 
+sint16_type
+__ashrhi3 (sint16_type in, char bit)
+{
+  sint16_type sign = in & (1 << 15);
+
+  if (bit > 16)
+    return 0;
+  if (bit < 0)
+    return in;
+
+  while (bit--)
+    in = ((uint16_type)in >> 1) | sign;
+
+  return in;
+}
+
+sint8_type
+__ashrqi3 (sint8_type in, char bit)
+{
+  sint8_type sign = in & (1 << 15);
+
+  if (bit > 8)
+    return 0;
+  if (bit < 0)
+    return in;
+
+  while (bit--)
+    in = ((uint8_type)in >> 1) | sign;
+
+  return in;
+}
-- 
2.11.0

